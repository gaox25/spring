<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
      1.配置monster对象/javabean
      2.在beans中可以配置多个bean
      3.bean表示就是一个java对象
      4.class属性是用于指定类的全路径，因为Spring底层要使用反射创建对象
      5.id属性表示该java对象在Spring容器中的id，通过id可以获取到该对象
      6.property用于该对象的属性赋值，没有给会有默认值
      -->
    <!--    <bean class="com.gaoxi.spring.bean.Monster" id="monster01">-->
    <!--&lt;!&ndash;    <bean class="com.gaoxi.spring.bean.Monster">&ndash;&gt;-->
    <!--        &lt;!&ndash;-->
    <!--         1.当我们给某个bean对象设置属性的时候-->
    <!--         2.底层是使用对应的setter方法完成的，比如setName()-->
    <!--         3.如果没有这个方法，就会报错-->
    <!--         &ndash;&gt;-->
    <!--        <property name="monsterId" value="100"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->
    <!--    <bean class="com.gaoxi.spring.bean.Monster" id="monster02">-->
    <!--&lt;!&ndash;    <bean class="com.gaoxi.spring.bean.Monster">&ndash;&gt;-->
    <!--        <property name="monsterId" value="1001"/>-->
    <!--        <property name="name" value="牛魔王~"/>-->
    <!--        <property name="skill" value="芭蕉扇~"/>-->
    <!--    </bean>-->
    <bean class="com.gaoxi.spring.bean.Car" id="car01">
        <property name="id" value="001"/>
        <property name="name" value="benz"/>
        <property name="price" value="100"/>
    </bean>

    <!-- 通过类型获取bean对象 -->
    <!--    <bean class="com.gaoxi.spring.bean.Monster">-->
    <!--        <property name="monsterId" value="100"/>-->
    <!--        <property name="name" value="牛魔王"/>-->
    <!--        <property name="skill" value="芭蕉扇"/>-->
    <!--    </bean>-->
    <!-- 配置Monster对象，并且指定构造器
      1.constructor-arg标签可以指定使用构造器的参数
      2.index表示构造器的第几个参数，是从0开始计算的
      3.除了可以通过index，还可以通过name或者是type来指定参数方式
      4.类的构造器，不能有完全相同类型和顺序的构造器，所以可以通过type来指定
      -->
    <bean id="monster03" class="com.gaoxi.spring.bean.Monster">
        <!--        <constructor-arg value="200" index="0"/>-->
        <!--        <constructor-arg value="200" name="monsterId"/>-->
        <constructor-arg value="200" type="Integer"/>
        <!--        <constructor-arg value="白骨精" index="1"/>-->
        <!--        <constructor-arg value="白骨精" name="name"/>-->
        <constructor-arg value="白骨精" type="String"/>
        <!--        <constructor-arg value="吸血" index="2"/>-->
        <!--        <constructor-arg value="吸血" name="skill"/>-->
        <constructor-arg value="吸血" type="String"/>
    </bean>

    <!-- 通过配置p名称空间来配置Bean -->
    <bean id="monster06" class="com.gaoxi.spring.bean.Monster"
          p:monsterId="500"
          p:name="红孩儿"
          p:skill="吐火"/>

    <!-- 配置MemberDAOImpl对象 -->
    <bean class="com.gaoxi.spring.dao.MemberDAOImpl" id="memberDAO"/>

    <!-- 配置MemberServiceImpl对象-使用内部bean -->
    <bean class="com.gaoxi.spring.service.MemberServiceImpl" id="memberService02">
        <property name="memberDAO">
            <bean class="com.gaoxi.spring.dao.MemberDAOImpl"/>
        </property>
    </bean>

    <!-- 配置MemberServiceImpl对象 -->
    <!--
     1.ref="memberDAO"表示MemberServiceImpl对象属性memberDAO引用的对象是id=memberDAO的对象
     2.这里就体现了Spring容器的依赖注入
     3.在Spring容器中，是作为一个整体来执行的，即如果引用到一个bean对象，对配置的顺序是没有要求的，即beans.xml中配置的所有对象都会有一个
     4.建议还是按顺序，好处是阅读的时候，比较方便
     -->
    <bean class="com.gaoxi.spring.service.MemberServiceImpl" id="memberService">
        <property name="memberDAO" ref="memberDAO"/>
    </bean>
</beans>